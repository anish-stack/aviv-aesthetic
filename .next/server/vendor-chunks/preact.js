/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/preact";
exports.ids = ["vendor-chunks/preact"];
exports.modules = {

/***/ "(rsc)/./node_modules/preact/dist/preact.js":
/*!********************************************!*\
  !*** ./node_modules/preact/dist/preact.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var n, l, t, u, i, o, r, e, f, c, s, a, h = {}, p = [], v = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, y = Array.isArray;\nfunction d(n, l) {\n    for(var t in l)n[t] = l[t];\n    return n;\n}\nfunction w(n) {\n    var l = n.parentNode;\n    l && l.removeChild(n);\n}\nfunction _(l, t, u) {\n    var i, o, r, e = {};\n    for(r in t)\"key\" == r ? i = t[r] : \"ref\" == r ? o = t[r] : e[r] = t[r];\n    if (arguments.length > 2 && (e.children = arguments.length > 3 ? n.call(arguments, 2) : u), \"function\" == typeof l && null != l.defaultProps) for(r in l.defaultProps)void 0 === e[r] && (e[r] = l.defaultProps[r]);\n    return g(l, e, i, o, null);\n}\nfunction g(n, u, i, o, r) {\n    var e = {\n        type: n,\n        props: u,\n        key: i,\n        ref: o,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        constructor: void 0,\n        __v: null == r ? ++t : r,\n        __i: -1,\n        __u: 0\n    };\n    return null == r && null != l.vnode && l.vnode(e), e;\n}\nfunction x(n) {\n    return n.children;\n}\nfunction k(n, l) {\n    this.props = n, this.context = l;\n}\nfunction m(n, l) {\n    if (null == l) return n.__ ? m(n.__, n.__i + 1) : null;\n    for(var t; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) return t.__e;\n    return \"function\" == typeof n.type ? m(n) : null;\n}\nfunction b(n) {\n    var l, t;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) {\n            n.__e = n.__c.base = t.__e;\n            break;\n        }\n        return b(n);\n    }\n}\nfunction C(n) {\n    (!n.__d && (n.__d = !0) && i.push(n) && !M.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || r)(M);\n}\nfunction M() {\n    var n, t, u, o, r, f, c, s;\n    for(i.sort(e); n = i.shift();)n.__d && (t = i.length, o = void 0, f = (r = (u = n).__v).__e, c = [], s = [], u.__P && ((o = d({}, r)).__v = r.__v + 1, l.vnode && l.vnode(o), A(u.__P, o, r, u.__n, u.__P.namespaceURI, 32 & r.__u ? [\n        f\n    ] : null, c, null == f ? m(r) : f, !!(32 & r.__u), s), o.__v = r.__v, o.__.__k[o.__i] = o, F(c, o, s), o.__e != f && b(o)), i.length > t && i.sort(e));\n    M.__r = 0;\n}\nfunction P(n, l, t, u, i, o, r, e, f, c, s) {\n    var a, v, y, d, w, _ = u && u.__k || p, g = l.length;\n    for(t.__d = f, S(t, l, _), f = t.__d, a = 0; a < g; a++)null != (y = t.__k[a]) && \"boolean\" != typeof y && \"function\" != typeof y && (v = -1 === y.__i ? h : _[y.__i] || h, y.__i = a, A(n, y, v, i, o, r, e, f, c, s), d = y.__e, y.ref && v.ref != y.ref && (v.ref && j(v.ref, null, y), s.push(y.ref, y.__c || d, y)), null == w && null != d && (w = d), 65536 & y.__u || v.__k === y.__k ? (f && !f.isConnected && (f = m(v)), f = $(y, f, n)) : \"function\" == typeof y.type && void 0 !== y.__d ? f = y.__d : d && (f = d.nextSibling), y.__d = void 0, y.__u &= -196609);\n    t.__d = f, t.__e = w;\n}\nfunction S(n, l, t) {\n    var u, i, o, r, e, f = l.length, c = t.length, s = c, a = 0;\n    for(n.__k = [], u = 0; u < f; u++)r = u + a, null != (i = n.__k[u] = null == (i = l[u]) || \"boolean\" == typeof i || \"function\" == typeof i ? null : \"string\" == typeof i || \"number\" == typeof i || \"bigint\" == typeof i || i.constructor == String ? g(null, i, null, null, null) : y(i) ? g(x, {\n        children: i\n    }, null, null, null) : void 0 === i.constructor && i.__b > 0 ? g(i.type, i.props, i.key, i.ref ? i.ref : null, i.__v) : i) ? (i.__ = n, i.__b = n.__b + 1, e = I(i, t, r, s), i.__i = e, o = null, -1 !== e && (s--, (o = t[e]) && (o.__u |= 131072)), null == o || null === o.__v ? (-1 == e && a--, \"function\" != typeof i.type && (i.__u |= 65536)) : e !== r && (e === r + 1 ? a++ : e > r ? s > f - r ? a += e - r : a-- : e < r ? e == r - 1 && (a = e - r) : a = 0, e !== u + a && (i.__u |= 65536))) : (o = t[r]) && null == o.key && o.__e && 0 == (131072 & o.__u) && (o.__e == n.__d && (n.__d = m(o)), z(o, o, !1), t[r] = null, s--);\n    if (s) for(u = 0; u < c; u++)null != (o = t[u]) && 0 == (131072 & o.__u) && (o.__e == n.__d && (n.__d = m(o)), z(o, o));\n}\nfunction $(n, l, t) {\n    var u, i;\n    if (\"function\" == typeof n.type) {\n        for(u = n.__k, i = 0; u && i < u.length; i++)u[i] && (u[i].__ = n, l = $(u[i], l, t));\n        return l;\n    }\n    n.__e != l && (t.insertBefore(n.__e, l || null), l = n.__e);\n    do {\n        l = l && l.nextSibling;\n    }while (null != l && 8 === l.nodeType);\n    return l;\n}\nfunction I(n, l, t, u) {\n    var i = n.key, o = n.type, r = t - 1, e = t + 1, f = l[t];\n    if (null === f || f && i == f.key && o === f.type && 0 == (131072 & f.__u)) return t;\n    if (u > (null != f && 0 == (131072 & f.__u) ? 1 : 0)) for(; r >= 0 || e < l.length;){\n        if (r >= 0) {\n            if ((f = l[r]) && 0 == (131072 & f.__u) && i == f.key && o === f.type) return r;\n            r--;\n        }\n        if (e < l.length) {\n            if ((f = l[e]) && 0 == (131072 & f.__u) && i == f.key && o === f.type) return e;\n            e++;\n        }\n    }\n    return -1;\n}\nfunction H(n, l, t) {\n    \"-\" === l[0] ? n.setProperty(l, null == t ? \"\" : t) : n[l] = null == t ? \"\" : \"number\" != typeof t || v.test(l) ? t : t + \"px\";\n}\nfunction L(n, l, t, u, i) {\n    var o;\n    n: if (\"style\" === l) if (\"string\" == typeof t) n.style.cssText = t;\n    else {\n        if (\"string\" == typeof u && (n.style.cssText = u = \"\"), u) for(l in u)t && l in t || H(n.style, l, \"\");\n        if (t) for(l in t)u && t[l] === u[l] || H(n.style, l, t[l]);\n    }\n    else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/(PointerCapture)$|Capture$/i, \"$1\")), l = l.toLowerCase() in n || \"onFocusOut\" === l || \"onFocusIn\" === l ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = t, t ? u ? t.t = u.t : (t.t = f, n.addEventListener(l, o ? s : c, o)) : n.removeEventListener(l, o ? s : c, o);\n    else {\n        if (\"http://www.w3.org/2000/svg\" == i) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"width\" != l && \"height\" != l && \"href\" != l && \"list\" != l && \"form\" != l && \"tabIndex\" != l && \"download\" != l && \"rowSpan\" != l && \"colSpan\" != l && \"role\" != l && l in n) try {\n            n[l] = null == t ? \"\" : t;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof t || (null == t || !1 === t && \"-\" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, t));\n    }\n}\nfunction T(n) {\n    return function(t) {\n        if (this.l) {\n            var u = this.l[t.type + n];\n            if (null == t.u) t.u = f++;\n            else if (t.u < u.t) return;\n            return u(l.event ? l.event(t) : t);\n        }\n    };\n}\nfunction A(n, t, u, i, o, r, e, f, c, s) {\n    var a, h, p, v, w, _, g, m, b, C, M, S, $, I, H, L = t.type;\n    if (void 0 !== t.constructor) return null;\n    128 & u.__u && (c = !!(32 & u.__u), r = [\n        f = t.__e = u.__e\n    ]), (a = l.__b) && a(t);\n    n: if (\"function\" == typeof L) try {\n        if (m = t.props, b = (a = L.contextType) && i[a.__c], C = a ? b ? b.props.value : a.__ : i, u.__c ? g = (h = t.__c = u.__c).__ = h.__E : (\"prototype\" in L && L.prototype.render ? t.__c = h = new L(m, C) : (t.__c = h = new k(m, C), h.constructor = L, h.render = N), b && b.sub(h), h.props = m, h.state || (h.state = {}), h.context = C, h.__n = i, p = h.__d = !0, h.__h = [], h._sb = []), null == h.__s && (h.__s = h.state), null != L.getDerivedStateFromProps && (h.__s == h.state && (h.__s = d({}, h.__s)), d(h.__s, L.getDerivedStateFromProps(m, h.__s))), v = h.props, w = h.state, h.__v = t, p) null == L.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), null != h.componentDidMount && h.__h.push(h.componentDidMount);\n        else {\n            if (null == L.getDerivedStateFromProps && m !== v && null != h.componentWillReceiveProps && h.componentWillReceiveProps(m, C), !h.__e && (null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(m, h.__s, C) || t.__v === u.__v)) {\n                for(t.__v !== u.__v && (h.props = m, h.state = h.__s, h.__d = !1), t.__e = u.__e, t.__k = u.__k, t.__k.forEach(function(n) {\n                    n && (n.__ = t);\n                }), M = 0; M < h._sb.length; M++)h.__h.push(h._sb[M]);\n                h._sb = [], h.__h.length && e.push(h);\n                break n;\n            }\n            null != h.componentWillUpdate && h.componentWillUpdate(m, h.__s, C), null != h.componentDidUpdate && h.__h.push(function() {\n                h.componentDidUpdate(v, w, _);\n            });\n        }\n        if (h.context = C, h.props = m, h.__P = n, h.__e = !1, S = l.__r, $ = 0, \"prototype\" in L && L.prototype.render) {\n            for(h.state = h.__s, h.__d = !1, S && S(t), a = h.render(h.props, h.state, h.context), I = 0; I < h._sb.length; I++)h.__h.push(h._sb[I]);\n            h._sb = [];\n        } else do {\n            h.__d = !1, S && S(t), a = h.render(h.props, h.state, h.context), h.state = h.__s;\n        }while (h.__d && ++$ < 25);\n        h.state = h.__s, null != h.getChildContext && (i = d(d({}, i), h.getChildContext())), p || null == h.getSnapshotBeforeUpdate || (_ = h.getSnapshotBeforeUpdate(v, w)), P(n, y(H = null != a && a.type === x && null == a.key ? a.props.children : a) ? H : [\n            H\n        ], t, u, i, o, r, e, f, c, s), h.base = t.__e, t.__u &= -161, h.__h.length && e.push(h), g && (h.__E = h.__ = null);\n    } catch (n) {\n        t.__v = null, c || null != r ? (t.__e = f, t.__u |= c ? 160 : 32, r[r.indexOf(f)] = null) : (t.__e = u.__e, t.__k = u.__k), l.__e(n, t, u);\n    }\n    else null == r && t.__v === u.__v ? (t.__k = u.__k, t.__e = u.__e) : t.__e = O(u.__e, t, u, i, o, r, e, c, s);\n    (a = l.diffed) && a(t);\n}\nfunction F(n, t, u) {\n    t.__d = void 0;\n    for(var i = 0; i < u.length; i++)j(u[i], u[++i], u[++i]);\n    l.__c && l.__c(t, n), n.some(function(t) {\n        try {\n            n = t.__h, t.__h = [], n.some(function(n) {\n                n.call(t);\n            });\n        } catch (n) {\n            l.__e(n, t.__v);\n        }\n    });\n}\nfunction O(l, t, u, i, o, r, e, f, c) {\n    var s, a, p, v, d, _, g, x = u.props, k = t.props, b = t.type;\n    if (\"svg\" === b ? o = \"http://www.w3.org/2000/svg\" : \"math\" === b ? o = \"http://www.w3.org/1998/Math/MathML\" : o || (o = \"http://www.w3.org/1999/xhtml\"), null != r) {\n        for(s = 0; s < r.length; s++)if ((d = r[s]) && \"setAttribute\" in d == !!b && (b ? d.localName === b : 3 === d.nodeType)) {\n            l = d, r[s] = null;\n            break;\n        }\n    }\n    if (null == l) {\n        if (null === b) return document.createTextNode(k);\n        l = document.createElementNS(o, b, k.is && k), r = null, f = !1;\n    }\n    if (null === b) x === k || f && l.data === k || (l.data = k);\n    else {\n        if (r = r && n.call(l.childNodes), x = u.props || h, !f && null != r) for(x = {}, s = 0; s < l.attributes.length; s++)x[(d = l.attributes[s]).name] = d.value;\n        for(s in x)if (d = x[s], \"children\" == s) ;\n        else if (\"dangerouslySetInnerHTML\" == s) p = d;\n        else if (\"key\" !== s && !(s in k)) {\n            if (\"value\" == s && \"defaultValue\" in k || \"checked\" == s && \"defaultChecked\" in k) continue;\n            L(l, s, null, d, o);\n        }\n        for(s in k)d = k[s], \"children\" == s ? v = d : \"dangerouslySetInnerHTML\" == s ? a = d : \"value\" == s ? _ = d : \"checked\" == s ? g = d : \"key\" === s || f && \"function\" != typeof d || x[s] === d || L(l, s, d, x[s], o);\n        if (a) f || p && (a.__html === p.__html || a.__html === l.innerHTML) || (l.innerHTML = a.__html), t.__k = [];\n        else if (p && (l.innerHTML = \"\"), P(l, y(v) ? v : [\n            v\n        ], t, u, i, \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : o, r, e, r ? r[0] : u.__k && m(u, 0), f, c), null != r) for(s = r.length; s--;)null != r[s] && w(r[s]);\n        f || (s = \"value\", void 0 !== _ && (_ !== l[s] || \"progress\" === b && !_ || \"option\" === b && _ !== x[s]) && L(l, s, _, x[s], o), s = \"checked\", void 0 !== g && g !== l[s] && L(l, s, g, x[s], o));\n    }\n    return l;\n}\nfunction j(n, t, u) {\n    try {\n        \"function\" == typeof n ? n(t) : n.current = t;\n    } catch (n) {\n        l.__e(n, u);\n    }\n}\nfunction z(n, t, u) {\n    var i, o;\n    if (l.unmount && l.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || j(i, null, t)), null != (i = n.__c)) {\n        if (i.componentWillUnmount) try {\n            i.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, t);\n        }\n        i.base = i.__P = null;\n    }\n    if (i = n.__k) for(o = 0; o < i.length; o++)i[o] && z(i[o], t, u || \"function\" != typeof n.type);\n    u || null == n.__e || w(n.__e), n.__c = n.__ = n.__e = n.__d = void 0;\n}\nfunction N(n, l, t) {\n    return this.constructor(n, t);\n}\nfunction V(t, u, i) {\n    var o, r, e, f;\n    l.__ && l.__(t, u), r = (o = \"function\" == typeof i) ? null : i && i.__k || u.__k, e = [], f = [], A(u, t = (!o && i || u).__k = _(x, null, [\n        t\n    ]), r || h, h, u.namespaceURI, !o && i ? [\n        i\n    ] : r ? null : u.firstChild ? n.call(u.childNodes) : null, e, !o && i ? i : r ? r.__e : u.firstChild, o, f), F(e, t, f);\n}\nn = p.slice, l = {\n    __e: function(n, l, t, u) {\n        for(var i, o, r; l = l.__;)if ((i = l.__c) && !i.__) try {\n            if ((o = i.constructor) && null != o.getDerivedStateFromError && (i.setState(o.getDerivedStateFromError(n)), r = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, u || {}), r = i.__d), r) return i.__E = i;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, t = 0, u = function(n) {\n    return null != n && null == n.constructor;\n}, k.prototype.setState = function(n, l) {\n    var t;\n    t = null != this.__s && this.__s !== this.state ? this.__s : this.__s = d({}, this.state), \"function\" == typeof n && (n = n(d({}, t), this.props)), n && d(t, n), null != n && this.__v && (l && this._sb.push(l), C(this));\n}, k.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), C(this));\n}, k.prototype.render = x, i = [], r = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, e = function(n, l) {\n    return n.__v.__b - l.__v.__b;\n}, M.__r = 0, f = 0, c = T(!1), s = T(!0), a = 0, exports.Component = k, exports.Fragment = x, exports.cloneElement = function(l, t, u) {\n    var i, o, r, e, f = d({}, l.props);\n    for(r in l.type && l.type.defaultProps && (e = l.type.defaultProps), t)\"key\" == r ? i = t[r] : \"ref\" == r ? o = t[r] : f[r] = void 0 === t[r] && void 0 !== e ? e[r] : t[r];\n    return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : u), g(l.type, f, i || l.key, o || l.ref, null);\n}, exports.createContext = function(n, l) {\n    var t = {\n        __c: l = \"__cC\" + a++,\n        __: n,\n        Consumer: function(n, l) {\n            return n.children(l);\n        },\n        Provider: function(n) {\n            var t, u;\n            return this.getChildContext || (t = [], (u = {})[l] = this, this.getChildContext = function() {\n                return u;\n            }, this.shouldComponentUpdate = function(n) {\n                this.props.value !== n.value && t.some(function(n) {\n                    n.__e = !0, C(n);\n                });\n            }, this.sub = function(n) {\n                t.push(n);\n                var l = n.componentWillUnmount;\n                n.componentWillUnmount = function() {\n                    t.splice(t.indexOf(n), 1), l && l.call(n);\n                };\n            }), n.children;\n        }\n    };\n    return t.Provider.__ = t.Consumer.contextType = t;\n}, exports.createElement = _, exports.createRef = function() {\n    return {\n        current: null\n    };\n}, exports.h = _, exports.hydrate = function n(l, t) {\n    V(l, t, n);\n}, exports.isValidElement = u, exports.options = l, exports.render = V, exports.toChildArray = function n(l, t) {\n    return t = t || [], null == l || \"boolean\" == typeof l || (y(l) ? l.some(function(l) {\n        n(l, t);\n    }) : t.push(l)), t;\n}; //# sourceMappingURL=preact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/preact/dist/preact.js\n");

/***/ })

};
;